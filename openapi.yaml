openapi: 3.0.3
info:
  title: Tractorbeam API
  description: The Tractorbeam REST API. Please see https://tractorbeam.ai/docs for more details.
  contact:
    name: Tractorbeam Support
    email: support@tractorbeam.ai
  version: 0.1.0
servers:
- url: https://api.tractorbeam.ai
paths:
  /graphs:
    post:
      tags:
      - Graphs
      summary: Create Graph
      description: Create a new graph.
      operationId: create_graph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGraphHttpRequestBody'
        required: true
      responses:
        '201':
          description: Graph successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSuccess'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: The authenticated user doesn't have permission to create graphs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: A Graph with the same name and owner already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Invalid input data (e.g., invalid graph name or owner)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: An unexpected error occurred while processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
      - api_key: []
  /health:
    get:
      tags:
      - Health Check
      summary: Health Check
      description: |-
        This is a simple health check that does not require authentication.
        It is used to check if the server is running and healthy.
      operationId: health_check
      responses:
        '200':
          description: OK
components:
  schemas:
    Graph:
      type: object
      required:
      - owner
      - name
      - created_at
      properties:
        owner:
          $ref: '#/components/schemas/ResourceOwner'
        name:
          $ref: '#/components/schemas/GraphName'
        created_at:
          type: string
          format: date-time
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: X-API-Key
tags:
- name: Graphs
  description: Manage and interact with graph data structures.
- name: Documents
  description: Create,read,update,and delete document resources.
- name: API Keys
  description: Manage API keys for authentication and authorization.
